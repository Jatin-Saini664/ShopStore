{"ast":null,"code":"var _jsxFileName = \"B:\\\\ShopStore\\\\frontend\\\\src\\\\Components\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { AuthContext } from '../Context/AuthProvider';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setUser,\n    csrftoken,\n    setToken\n  } = useContext(AuthContext);\n  const history = useHistory();\n  let token = \"\";\n  useEffect(async () => {\n    if (csrftoken === '') {\n      const attribute = {\n        method: \"GET\",\n        credentials: \"same-origin\",\n        headers: {\n          'Accept': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest'\n        }\n      };\n      let response = await fetch(\"http://127.0.0.1:8000/gettoken\", attribute);\n      let data = await response.json();\n      console.log(data); // .then((response)=> response.json())\n      // .then((data)=>{\n      //     console.log(data);\n      //     setToken(data)\n      //     token=data;\n      //     console.log(token)\n      // })\n      // .catch((err)=>console.log(err));\n    }\n  }, []);\n\n  function onsubmit() {\n    console.log('a=' + token);\n    const attribute = {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        'Accept': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n        'X-CSRFToken': token\n      },\n      body: JSON.stringify({\n        'username': username,\n        'password1': password\n      })\n    };\n    fetch(\"http://127.0.0.1:8000/login\", attribute).then(response => response.json()).then(data => {\n      console.log(data);\n\n      if (data['isValid']) {\n        setUser(data['username']);\n        history.push(\"/\");\n      }\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        className: \"border-bottom mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Username*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Required 150 characters or fewer. Letters, digits and @/./+/-/_ only.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Password*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-info\",\n        onClick: onsubmit,\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-top pt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-muted\",\n        children: [\"Need an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \"ml-2\",\n          children: \"Sign up Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"cawxCiqsQeC2KxDUmHZ7tmc0MnE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["B:/ShopStore/frontend/src/Components/Login.jsx"],"names":["React","useContext","useState","useEffect","useHistory","AuthContext","Link","Login","username","setUsername","password","setPassword","setUser","csrftoken","setToken","history","token","attribute","method","credentials","headers","response","fetch","data","json","console","log","onsubmit","body","JSON","stringify","then","push","catch","err","e","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { AuthContext } from '../Context/AuthProvider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const {setUser, csrftoken, setToken} = useContext(AuthContext);\r\n    const history = useHistory();\r\n    let token=\"\"\r\n\r\n    useEffect(async()=>{\r\n        if(csrftoken===''){\r\n            const attribute = {\r\n                method : \"GET\",\r\n                credentials :\"same-origin\",\r\n                headers:{\r\n                    'Accept': 'application/json',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                },\r\n            }\r\n            let response = await fetch(\"http://127.0.0.1:8000/gettoken\",attribute);\r\n            let data = await response.json();\r\n            console.log(data);\r\n                // .then((response)=> response.json())\r\n                // .then((data)=>{\r\n                //     console.log(data);\r\n                //     setToken(data)\r\n                //     token=data;\r\n                //     console.log(token)\r\n                // })\r\n                // .catch((err)=>console.log(err));\r\n        }\r\n    }, [])\r\n\r\n    function onsubmit(){\r\n        console.log('a='+token);\r\n        const attribute = {\r\n            method: \"POST\",\r\n            credentials :\"same-origin\",\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'X-CSRFToken': token,\r\n            },\r\n            body: JSON.stringify({\r\n                'username':username,\r\n                'password1':password\r\n            }),\r\n        }\r\n        fetch(\"http://127.0.0.1:8000/login\",attribute)\r\n            .then((response)=> response.json())\r\n            .then((data)=>{\r\n                console.log(data);\r\n                if(data['isValid']){\r\n                    setUser(data['username']);\r\n                    history.push(\"/\");\r\n                }\r\n            })\r\n            .catch((err)=>console.log(err));\r\n    }\r\n    return (\r\n        <div className= \"content-section\">\r\n            <fieldset className=\"form-group\">\r\n                <legend className=\"border-bottom mb-4\">Login</legend>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Username*</label>\r\n                    <input className=\"form-control\" type=\"text\" value={username} onChange={(e)=>setUsername(e.target.value)}/>\r\n                    <small>Required 150 characters or fewer. Letters, digits and @/./+/-/_ only.</small>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Password*</label>\r\n                    <input type=\"password\" className=\"form-control\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n                </div>\r\n            </fieldset>\r\n            <div className=\"form-group\">\r\n                <button className=\"btn btn-outline-info\" onClick={onsubmit} type=\"submit\">Login</button>\r\n            </div>\r\n        <div className=\"border-top pt-3\">\r\n            <small className=\"text-muted\">\r\n                Need an account ? <Link to=\"/register\" className=\"ml-2\">Sign up Now</Link>\r\n            </small>\r\n        </div>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default Login;"]},"metadata":{},"sourceType":"module"}