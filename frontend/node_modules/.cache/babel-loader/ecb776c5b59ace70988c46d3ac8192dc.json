{"ast":null,"code":"var _jsxFileName = \"B:\\\\ShopStore\\\\frontend\\\\src\\\\Components\\\\CustomerSignup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { AuthContext } from '../Context/AuthProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerSignup = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [conPass, setConPass] = useState(\"\");\n  const history = useHistory();\n  const {\n    setUser,\n    csrftoken,\n    setIsSeller\n  } = useContext(AuthContext);\n  useEffect(() => {}, []);\n\n  function onsub() {\n    console.log(username + \" \" + email + \"  \" + password + \"  \" + conPass);\n    const attribute = {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        'Accept': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify({\n        'username': username,\n        'email': email,\n        'password1': password,\n        'password2': conPass\n      })\n    };\n    fetch(\"http://127.0.0.1:8000/register\", attribute).then(response => response.json()).then(data => {\n      console.log(data);\n\n      if (data['isValid']) {\n        setUser(data['username']);\n        setIsSeller(1);\n        history.push(\"/\");\n      }\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomerSignup, \"xDJjKxv52pfZK88pJt1F8GYpD/U=\", false, function () {\n  return [useHistory];\n});\n\n_c = CustomerSignup;\nexport default CustomerSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerSignup\");","map":{"version":3,"sources":["B:/ShopStore/frontend/src/Components/CustomerSignup.jsx"],"names":["React","useContext","useState","useEffect","useHistory","AuthContext","CustomerSignup","username","setUsername","email","setEmail","password","setPassword","conPass","setConPass","history","setUser","csrftoken","setIsSeller","onsub","console","log","attribute","method","credentials","headers","body","JSON","stringify","fetch","then","response","json","data","push","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAM;AAACY,IAAAA,OAAD;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA;AAArB,MAAoCjB,UAAU,CAACI,WAAD,CAApD;AAEAF,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEN,EAFM,CAAT;;AAIA,WAASgB,KAAT,GAAgB;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,GAAC,GAAT,GAAaE,KAAb,GAAmB,IAAnB,GAAwBE,QAAxB,GAAiC,IAAjC,GAAsCE,OAAlD;AACA,UAAMS,SAAS,GAAG;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,WAAW,EAAE,aAFC;AAGdC,MAAAA,OAAO,EAAC;AACJ,kBAAU,kBADN;AAEJ,4BAAoB,gBAFhB;AAGJ,uBAAeR;AAHX,OAHM;AAQdS,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,oBAAWrB,QADM;AAEjB,iBAAQE,KAFS;AAGjB,qBAAYE,QAHK;AAIjB,qBAAYE;AAJK,OAAf;AARQ,KAAlB;AAeAgB,IAAAA,KAAK,CAAC,gCAAD,EAAmCP,SAAnC,CAAL,CACKQ,IADL,CACWC,QAAD,IAAYA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEWG,IAAD,IAAQ;AACVb,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;;AACA,UAAGA,IAAI,CAAC,SAAD,CAAP,EAAmB;AACfjB,QAAAA,OAAO,CAACiB,IAAI,CAAC,UAAD,CAAL,CAAP;AACAf,QAAAA,WAAW,CAAC,CAAD,CAAX;AACAH,QAAAA,OAAO,CAACmB,IAAR,CAAa,GAAb;AACH;AACJ,KATL,EAUKC,KAVL,CAUYC,GAAD,IAAOhB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAVlB;AAWH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA/CD;;GAAM9B,c;UAKcF,U;;;KALdE,c;AAiDN,eAAeA,cAAf","sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { AuthContext } from '../Context/AuthProvider';\r\n\r\nconst CustomerSignup = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [conPass, setConPass] = useState(\"\")\r\n    const history = useHistory();\r\n    const {setUser, csrftoken, setIsSeller} = useContext(AuthContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n    }, []);\r\n    \r\n    function onsub(){\r\n        console.log(username+\" \"+email+\"  \"+password+\"  \"+conPass)\r\n        const attribute = {\r\n            method: \"POST\",\r\n            credentials :\"same-origin\",\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'username':username,\r\n                'email':email,\r\n                'password1':password,\r\n                'password2':conPass\r\n            }),\r\n        }\r\n        fetch(\"http://127.0.0.1:8000/register\", attribute)\r\n            .then((response)=>response.json())\r\n            .then((data)=>{\r\n                console.log(data);\r\n                if(data['isValid']){\r\n                    setUser(data['username']);\r\n                    setIsSeller(1);\r\n                    history.push(\"/\");\r\n                }\r\n            })\r\n            .catch((err)=>console.log(err));\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n            \r\n    );\r\n}\r\n \r\nexport default CustomerSignup; "]},"metadata":{},"sourceType":"module"}