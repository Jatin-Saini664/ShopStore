{"ast":null,"code":"var _jsxFileName = \"B:\\\\ShopStore\\\\frontend\\\\src\\\\Context\\\\AuthProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [isSeller, setisseller] = useState(0);\n  const [searchList, setSearchList] = useState([]);\n  const [search, setSearch] = useState('');\n\n  function setUser(user) {\n    setCurrentUser(user);\n  }\n\n  function setIsSeller(value) {\n    setisseller(value);\n  }\n\n  function setList(value) {\n    setSearchList(value);\n  }\n\n  function Search(value) {\n    setSearch(value);\n  } // function getCookie(name) {\n  //     let cookieValue = null;\n  //     console.log(document.cookie==='');\n  //     if (document.cookie && document.cookie !== '') {\n  //         const cookies = document.cookie.split(';');\n  //         for (let i = 0; i < cookies.length; i++) {\n  //             const cookie = cookies[i].trim();\n  //             // Does this cookie string begin with the name we want?\n  //             if (cookie.substring(0, name.length + 1) === (name + '=')) {\n  //                 cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n  //                 break;\n  //             }\n  //         }\n  //     }\n  //     return cookieValue;\n  // }\n  // const csrftoken = getCookie('csrftoken');\n\n\n  const value = {\n    user: currentUser,\n    setUser: setUser,\n    isSeller: isSeller,\n    setIsSeller: setIsSeller,\n    searchList: searchList,\n    setList: setList,\n    search: search,\n    setSearchValue: Search\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n}\n\n_s(AuthProvider, \"yfA8LxZxprgF3GWJlyAMF3Tix+o=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["B:/ShopStore/frontend/src/Context/AuthProvider.jsx"],"names":["React","useState","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","isSeller","setisseller","searchList","setSearchList","search","setSearch","setUser","user","setIsSeller","value","setList","Search","setSearchValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AACA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;AAEP,OAAO,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAiC;AAAA;;AACpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;;AACA,WAASa,OAAT,CAAiBC,IAAjB,EAAsB;AAClBR,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACH;;AAED,WAASC,WAAT,CAAqBC,KAArB,EAA2B;AACvBR,IAAAA,WAAW,CAACQ,KAAD,CAAX;AACH;;AAED,WAASC,OAAT,CAAiBD,KAAjB,EAAuB;AACnBN,IAAAA,aAAa,CAACM,KAAD,CAAb;AACH;;AAED,WAASE,MAAT,CAAgBF,KAAhB,EAAsB;AAClBJ,IAAAA,SAAS,CAACI,KAAD,CAAT;AACH,GAnBmC,CAqBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMA,KAAK,GAAG;AACVF,IAAAA,IAAI,EAACT,WADK;AAEVQ,IAAAA,OAAO,EAACA,OAFE;AAGVN,IAAAA,QAAQ,EAACA,QAHC;AAIVQ,IAAAA,WAAW,EAACA,WAJF;AAKVN,IAAAA,UAAU,EAACA,UALD;AAMVQ,IAAAA,OAAO,EAACA,OANE;AAOVN,IAAAA,MAAM,EAACA,MAPG;AAQVQ,IAAAA,cAAc,EAACD;AARL,GAAd;AAUA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEF,KAA7B;AAAA,cAAqCZ;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAlDeD,Y;;KAAAA,Y","sourcesContent":["import React, {useState} from 'react'\r\nexport const AuthContext = React.createContext()\r\n\r\nexport function AuthProvider({children}){\r\n    const [currentUser, setCurrentUser] = useState(\"\");\r\n    const [isSeller, setisseller] = useState(0);\r\n    const [searchList, setSearchList] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    function setUser(user){\r\n        setCurrentUser(user);\r\n    }\r\n\r\n    function setIsSeller(value){\r\n        setisseller(value);\r\n    }\r\n\r\n    function setList(value){\r\n        setSearchList(value);\r\n    }\r\n\r\n    function Search(value){\r\n        setSearch(value);\r\n    }\r\n\r\n    // function getCookie(name) {\r\n    //     let cookieValue = null;\r\n    //     console.log(document.cookie==='');\r\n    //     if (document.cookie && document.cookie !== '') {\r\n    //         const cookies = document.cookie.split(';');\r\n    //         for (let i = 0; i < cookies.length; i++) {\r\n    //             const cookie = cookies[i].trim();\r\n    //             // Does this cookie string begin with the name we want?\r\n    //             if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n    //                 cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return cookieValue;\r\n    // }\r\n    // const csrftoken = getCookie('csrftoken');\r\n\r\n    const value = {\r\n        user:currentUser,\r\n        setUser:setUser,\r\n        isSeller:isSeller,\r\n        setIsSeller:setIsSeller,\r\n        searchList:searchList,\r\n        setList:setList,\r\n        search:search,\r\n        setSearchValue:Search\r\n    }\r\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\r\n}"]},"metadata":{},"sourceType":"module"}